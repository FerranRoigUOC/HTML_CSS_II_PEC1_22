{"mappings":"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","sources":["OneDrive/Escritorio/uoc/html_css_II/pec1_git/node_modules/lite-youtube-embed/src/lite-yt-embed.js"],"sourcesContent":["/**\n * A lightweight youtube embed. Still should feel the same to the user, just MUCH faster to initialize and paint.\n *\n * Thx to these as the inspiration\n *   https://storage.googleapis.com/amp-vs-non-amp/youtube-lazy.html\n *   https://autoplay-youtube-player.glitch.me/\n *\n * Once built it, I also found these:\n *   https://github.com/ampproject/amphtml/blob/master/extensions/amp-youtube (👍👍)\n *   https://github.com/Daugilas/lazyYT\n *   https://github.com/vb/lazyframe\n */\nclass LiteYTEmbed extends HTMLElement {\n    connectedCallback() {\n        this.videoId = this.getAttribute('videoid');\n\n        let playBtnEl = this.querySelector('.lty-playbtn');\n        // A label for the button takes priority over a [playlabel] attribute on the custom-element\n        this.playLabel = (playBtnEl && playBtnEl.textContent.trim()) || this.getAttribute('playlabel') || 'Play';\n\n        /**\n         * Lo, the youtube placeholder image!  (aka the thumbnail, poster image, etc)\n         *\n         * See https://github.com/paulirish/lite-youtube-embed/blob/master/youtube-thumbnail-urls.md\n         *\n         * TODO: Do the sddefault->hqdefault fallback\n         *       - When doing this, apply referrerpolicy (https://github.com/ampproject/amphtml/pull/3940)\n         * TODO: Consider using webp if supported, falling back to jpg\n         */\n        if (!this.style.backgroundImage) {\n          this.posterUrl = `https://i.ytimg.com/vi/${this.videoId}/hqdefault.jpg`;\n          // Warm the connection for the poster image\n          LiteYTEmbed.addPrefetch('preload', this.posterUrl, 'image');\n\n          this.style.backgroundImage = `url(\"${this.posterUrl}\")`;\n        }\n\n        // Set up play button, and its visually hidden label\n        if (!playBtnEl) {\n            playBtnEl = document.createElement('button');\n            playBtnEl.type = 'button';\n            playBtnEl.classList.add('lty-playbtn');\n            this.append(playBtnEl);\n        }\n        if (!playBtnEl.textContent) {\n            const playBtnLabelEl = document.createElement('span');\n            playBtnLabelEl.className = 'lyt-visually-hidden';\n            playBtnLabelEl.textContent = this.playLabel;\n            playBtnEl.append(playBtnLabelEl);\n        }\n\n        // On hover (or tap), warm up the TCP connections we're (likely) about to use.\n        this.addEventListener('pointerover', LiteYTEmbed.warmConnections, {once: true});\n\n        // Once the user clicks, add the real iframe and drop our play button\n        // TODO: In the future we could be like amp-youtube and silently swap in the iframe during idle time\n        //   We'd want to only do this for in-viewport or near-viewport ones: https://github.com/ampproject/amphtml/pull/5003\n        this.addEventListener('click', e => this.addIframe());\n    }\n\n    // // TODO: Support the the user changing the [videoid] attribute\n    // attributeChangedCallback() {\n    // }\n\n    /**\n     * Add a <link rel={preload | preconnect} ...> to the head\n     */\n    static addPrefetch(kind, url, as) {\n        const linkEl = document.createElement('link');\n        linkEl.rel = kind;\n        linkEl.href = url;\n        if (as) {\n            linkEl.as = as;\n        }\n        document.head.append(linkEl);\n    }\n\n    /**\n     * Begin pre-connecting to warm up the iframe load\n     * Since the embed's network requests load within its iframe,\n     *   preload/prefetch'ing them outside the iframe will only cause double-downloads.\n     * So, the best we can do is warm up a few connections to origins that are in the critical path.\n     *\n     * Maybe `<link rel=preload as=document>` would work, but it's unsupported: http://crbug.com/593267\n     * But TBH, I don't think it'll happen soon with Site Isolation and split caches adding serious complexity.\n     */\n    static warmConnections() {\n        if (LiteYTEmbed.preconnected) return;\n\n        // The iframe document and most of its subresources come right off youtube.com\n        LiteYTEmbed.addPrefetch('preconnect', 'https://www.youtube-nocookie.com');\n        // The botguard script is fetched off from google.com\n        LiteYTEmbed.addPrefetch('preconnect', 'https://www.google.com');\n\n        // Not certain if these ad related domains are in the critical path. Could verify with domain-specific throttling.\n        LiteYTEmbed.addPrefetch('preconnect', 'https://googleads.g.doubleclick.net');\n        LiteYTEmbed.addPrefetch('preconnect', 'https://static.doubleclick.net');\n\n        LiteYTEmbed.preconnected = true;\n    }\n\n    addIframe() {\n        const params = new URLSearchParams(this.getAttribute('params') || []);\n        params.append('autoplay', '1');\n\n        const iframeEl = document.createElement('iframe');\n        iframeEl.width = 560;\n        iframeEl.height = 315;\n        // No encoding necessary as [title] is safe. https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html#:~:text=Safe%20HTML%20Attributes%20include\n        iframeEl.title = this.playLabel;\n        iframeEl.allow = 'accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture';\n        iframeEl.allowFullscreen = true;\n        // AFAIK, the encoding here isn't necessary for XSS, but we'll do it only because this is a URL\n        // https://stackoverflow.com/q/64959723/89484\n        iframeEl.src = `https://www.youtube-nocookie.com/embed/${encodeURIComponent(this.videoId)}?${params.toString()}`;\n        this.append(iframeEl);\n\n        this.classList.add('lyt-activated');\n\n        // Set focus for a11y\n        this.querySelector('iframe').focus();\n    }\n}\n// Register custom element\ncustomElements.define('lite-youtube', LiteYTEmbed);\n"],"names":[],"version":3,"file":"presentacion.1389432c.js.map","sourceRoot":"/__parcel_source_root/"}